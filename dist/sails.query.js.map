{"version":3,"file":"sails.query.js","sourceRoot":"","sources":["../src/sails.query.ts"],"names":[],"mappings":"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","sourcesContent":["import { Sails } from \"./sails\";\r\nimport { SailsModel } from \"./sails.model\";\r\nimport { SailsRequest } from \"./sails.request\";\r\nimport { SailsModelInterface } from \"./sails.model.interface\";\r\nimport { RequestCriteria } from \"./sails.request.criteria\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map } from \"rxjs/operators\";\r\n\r\nexport class SailsQuery<T extends SailsModelInterface> {\r\n    private model: T;\r\n    private request: SailsRequest;\r\n    private criteria: RequestCriteria;\r\n    private errorMsg = `[SailsSocketIO]: the data is not an instance of ${this.modelClass.name}.\r\n        You could SailsModel.unserialize(${this.modelClass.name}, data) as ${this.modelClass.name}[] (Array of Models), Or\r\n        SailsModel.unserialize(${this.modelClass.name}, data) as ${this.modelClass.name} (Single Models)\r\n        after fetching the data with SailsRequest.`;\r\n\r\n    constructor(sails: Sails, private modelClass: { new(): T }) {\r\n        this.request = new SailsRequest(sails);\r\n        this.model = new modelClass();\r\n    }\r\n\r\n    public find(): Observable<T[]> {\r\n        this.request.addParam(\"where\", this.getRequestCriteria());\r\n        return this.request.get(`/${this.model.getEndPoint()}`).pipe(map(res => {\r\n            if (res.isOk()) {\r\n                return SailsModel.unserialize<T>(this.modelClass, res.getData()) as T[];\r\n            }\r\n            throw res;\r\n        }));\r\n    }\r\n\r\n    public findById(id: string): Observable<T> {\r\n        this.request.addParam(\"where\", this.getRequestCriteria());\r\n        return this.request.get(`/${this.model.getEndPoint()}/${id}`).pipe(map(res => {\r\n            if (res.isOk()) {\r\n                return SailsModel.unserialize<T>(this.modelClass, res.getData()) as T;\r\n            }\r\n            throw res;\r\n        }));\r\n    }\r\n\r\n    public save(model: T): Observable<T> {\r\n        if (!(model instanceof this.modelClass)) {\r\n            throw new TypeError(this.errorMsg);\r\n        }\r\n\r\n        const data = SailsModel.serialize(model);\r\n        const url = `/${model.getEndPoint()}`;\r\n        if (model.id === null) {\r\n            return this.request.post(url, data).pipe(map(res => {\r\n                if (res.isOk()) {\r\n                    return SailsModel.unserialize<T>(this.modelClass, res.getData()) as T;\r\n                }\r\n                throw res;\r\n            }));\r\n        } else {\r\n            return this.request.put(url.concat(\"/\", model.id), data).pipe(map(res => {\r\n                if (res.isOk()) {\r\n                    return SailsModel.unserialize<T>(this.modelClass, res.getData()) as T;\r\n                }\r\n                throw res;\r\n            }));\r\n        }\r\n    }\r\n\r\n    public update(id: string, model: Partial<T>): Observable<T> {\r\n        if (model.createdAt) {\r\n            delete model.createdAt;\r\n        }\r\n        if (model.updatedAt) {\r\n            delete model.updatedAt;\r\n        }\r\n        const data = model instanceof SailsModel ? SailsModel.serialize(model) : Object.assign({}, model);\r\n        return this.request.put(`/${this.model.getEndPoint()}/${id}`, data).pipe(map(res => {\r\n            if (res.isOk()) {\r\n                return SailsModel.unserialize<T>(this.modelClass, res.getData()) as T;\r\n            }\r\n            throw res;\r\n        }));\r\n    }\r\n\r\n    public remove(id: string): Observable<T> {\r\n        return this.request.delete(`/${this.model.getEndPoint()}/${id}`).pipe(map(res => {\r\n            if (res.isOk()) {\r\n                return SailsModel.unserialize<T>(this.modelClass, res.getData()) as T;\r\n            }\r\n            throw res;\r\n        }));\r\n    }\r\n\r\n    public setLimit(limit: number): this {\r\n        this.request.addParam(\"limit\", limit);\r\n        return this;\r\n    }\r\n\r\n    public setSort(sort: string): this {\r\n        this.request.addParam(\"sort\", sort);\r\n        return this;\r\n    }\r\n\r\n    public setSkip(skip: number): this {\r\n        this.request.addParam(\"skip\", skip);\r\n        return this;\r\n    }\r\n\r\n    public setPopulation(...population: string[]): this {\r\n        this.request.addParam(\"populate\", `[${population.join(\",\")}]`);\r\n        return this;\r\n    }\r\n\r\n    public setRequestCriteria(criteria: RequestCriteria): this {\r\n        this.criteria = criteria;\r\n        return this;\r\n    }\r\n\r\n    private getRequestCriteria(): RequestCriteria {\r\n        return this.criteria || new RequestCriteria();\r\n    }\r\n}\r\n"]}