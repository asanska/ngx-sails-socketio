{"version":3,"file":"sails.request.options.js","sourceRoot":"","sources":["../src/sails.request.options.ts"],"names":[],"mappings":"AASA;IAGI,6BAAY,EAA8D;YAA5D,YAAG,EAAE,kBAAM,EAAE,kBAAM,EAAE,oBAAO;QACtC,IAAI,CAAC,OAAO,GAAG,EAAE,GAAG,KAAA,EAAE,MAAM,QAAA,EAAE,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAAE,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,CAAC;IAC7F,CAAC;IAED,mCAAK,GAAL,UAAM,OAAqC;QACvC,6BAA6B;QAC7B,KAAK,IAAM,MAAI,IAAI,OAAO,EAAE;YACxB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,MAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAI,CAAC,EAAE;gBACtD,OAAO,OAAO,CAAC,MAAI,CAAC,CAAC;aACxB;SACJ;QAED,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;QACrC,OAAO,IAAI,CAAC;IAChB,CAAC;IAEO,mCAAK,GAAb,UAAc,GAAgC;QAAhC,oBAAA,EAAA,QAAgC;QAC1C,IAAI,GAAG,GAAG,IAAI,GAAG,CAAC;QAClB,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,UAAA,CAAC,IAAI,OAAA,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAApB,CAAoB,CAAC,CAAC;QACpD,OAAO,GAAG,CAAC;IACf,CAAC;IAEO,sCAAQ,GAAhB,UAAiB,GAAkC;QAAlC,oBAAA,EAAA,UAA+B,GAAG;QAC/C,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,GAAG,CAAC,OAAO,CAAC,UAAC,CAAC,EAAE,CAAC,IAAK,OAAA,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAZ,CAAY,CAAC,CAAC;QACpC,OAAO,GAAG,CAAC;IACf,CAAC;IAED,sBAAI,uCAAM;aAAV;YACI,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;QAC/B,CAAC;;;OAAA;IAED,sBAAI,oCAAG;aAAP;YACI,OAAO,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC;QAC5B,CAAC;;;OAAA;IAED,sBAAI,uCAAM;aAAV;YACI,OAAO,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;QAC/B,CAAC;;;OAAA;IAED,sBAAI,wCAAO;aAAX;YACI,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;QAChC,CAAC;;;OAAA;IAED,uCAAS,GAAT;QACI,OAAO;YACH,GAAG,EAAE,IAAI,CAAC,GAAG;YACb,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC;YAClC,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC;SACvC,CAAC;IACN,CAAC;IACL,0BAAC;AAAD,CAAC,AAvDD,IAuDC","sourcesContent":["import { SailsIOClient } from \"./sails.io.client\";\r\n\r\nexport interface SailsRequestOptionsInterface {\r\n    url?: string;\r\n    method?: string;\r\n    params?: Map<string, string>;\r\n    headers?: Map<string, string>;\r\n}\r\n\r\nexport class SailsRequestOptions {\r\n    private readonly options: SailsRequestOptionsInterface;\r\n\r\n    constructor({ url, method, params, headers }: SailsIOClient.RequestOptions) {\r\n        this.options = { url, method, params: this.toMap(params), headers: this.toMap(headers) };\r\n    }\r\n\r\n    clone(options: SailsRequestOptionsInterface): this {\r\n        // Strip out undefined values\r\n        for (const name in options) {\r\n            if (!this.options.hasOwnProperty(name) || !options[name]) {\r\n                delete options[name];\r\n            }\r\n        }\r\n\r\n        Object.assign(this.options, options);\r\n        return this;\r\n    }\r\n\r\n    private toMap(obj: { [key: string]: any } = {}) {\r\n        let map = new Map;\r\n        Object.keys(obj).forEach(k => (map.set(k, obj[k])));\r\n        return map;\r\n    }\r\n\r\n    private toObject(map: Map<string, string> = new Map) {\r\n        let obj = {};\r\n        map.forEach((v, k) => (obj[k] = v));\r\n        return obj;\r\n    }\r\n\r\n    get method(): string | undefined {\r\n        return this.options.method;\r\n    }\r\n\r\n    get url(): string | undefined {\r\n        return this.options.url;\r\n    }\r\n\r\n    get params(): Map<string, string> | undefined {\r\n        return this.options.params;\r\n    }\r\n\r\n    get headers(): Map<string, string> | undefined {\r\n        return this.options.headers;\r\n    }\r\n\r\n    serialize(): SailsIOClient.RequestOptions {\r\n        return {\r\n            url: this.url,\r\n            method: this.method,\r\n            params: this.toObject(this.params),\r\n            headers: this.toObject(this.headers)\r\n        };\r\n    }\r\n}\r\n"]}