{"version":3,"file":"sails.io.client.js","sourceRoot":"","sources":["../src/sails.io.client.ts"],"names":[],"mappings":"","sourcesContent":["export declare namespace SailsIOClient {\r\n\r\n    interface Headers {\r\n        [key: string]: string | boolean;\r\n    }\r\n\r\n    namespace JWR {\r\n\r\n        interface Response {\r\n            body: any;\r\n            error: any;\r\n            headers: Headers;\r\n            statusCode: number;\r\n            toString: () => string;\r\n            toPOJO: () => object;\r\n            pipe: () => Error;\r\n        }\r\n\r\n        interface Event {\r\n            verb: any;\r\n            id: any;\r\n            data: object;\r\n        }\r\n    }\r\n\r\n    interface IO {\r\n        socket: Socket;\r\n        sails: SailsSocket;\r\n    }\r\n\r\n    interface Options {\r\n        url: string;\r\n        query: string;\r\n        reconnection: boolean;\r\n        environment: string;\r\n        autoConnect?: boolean;\r\n        useCORSRouteToGetCookie?: boolean;\r\n        transports?: string[];\r\n        path?: string;\r\n        headers?: Headers;\r\n        timeout?: number;\r\n        initialConnectionHeaders?: Headers;\r\n        multiplex?: any;\r\n        reconnectionAttempts?: number;\r\n        reconnectionDelay?: number;\r\n        reconnectionDelayMax?: number;\r\n        rejectUnauthorized?: boolean;\r\n        randomizationFactor?: number;\r\n    }\r\n\r\n    interface SailsSocket extends Options {\r\n        connect: (url, opts) => Socket;\r\n    }\r\n\r\n    interface RequestOptions {\r\n        url?: string;\r\n        method?: string;\r\n        params?: object;\r\n        headers?: Headers;\r\n    }\r\n\r\n    interface EventCallback {\r\n        (response): void;\r\n    }\r\n\r\n    interface ResponseCallback {\r\n        (body: any, JWR: JWR.Response): void;\r\n    }\r\n\r\n    interface Socket {\r\n        _connect(): void;\r\n        reconnect(): any;\r\n        disconnect(): any;\r\n        isConnected(): boolean;\r\n        isConnecting(): boolean;\r\n        mightBeAboutToAutoConnect(): boolean;\r\n        replay(): Socket;\r\n        on(eventName, callback: EventCallback): Socket;\r\n        off(eventName, callback: EventCallback): Socket;\r\n        removeAllListeners(): Socket;\r\n        get(url: string, data: any, callback: ResponseCallback): void;\r\n        post(url: string, data: any, callback: ResponseCallback): void;\r\n        put(url: string, data: any, callback: ResponseCallback): void;\r\n        patch(url: string, data: any, callback: ResponseCallback): void;\r\n        delete(url: string, data: any, callback: ResponseCallback): void;\r\n        request(options: RequestOptions, callback: ResponseCallback): void;\r\n    }\r\n}\r\n"]}